{"version":3,"sources":["cover/back.png","components/player/Playlist.js","components/player/ProgressBar.js","store/playlist.js","components/player/Audio.js","components/player/Top.js","components/player/Player.js","App.js","reportWebVitals.js","index.js"],"names":["Playlist","props","Container","styled","div","Item","Image","img","Descr","Title","p","Author","playlist","map","track","onClick","onChangeTrack","id","src","cover","alt","title","author","ProgressBar","width","Point","progressPercent","Progress","fetchedPlaylist","PlaylistHappy","url","PlaylistSad","PlaylistNatural","fetchPlaylist","emotion","console","log","Promise","res","rej","setTimeout","PlaylistContext","React","createContext","getSecondsToMinutesAndSeconds","time","minutes","Math","floor","seconds","iconStyles","cursor","color","Audio","audioPlayer","useState","currentTrackDuration","setCurrentTrackDuration","currentTrackMoment","setCurrentTrackMoment","progressBarWidth","setProgressBarWidth","isPlaying","setIsPlaying","Counter","handleStop","pause","currentTime","handlePlay","paused","ended","play","handleMetadata","duration","useEffect","useLayoutEffect","document","getElementById","Consumer","value","preload","onLoadedMetadata","onTimeUpdate","playNext","handleNextTrack","type","style","icon","ic_skip_previous","handlePrevTrack","size","ic_pause","ic_play_arrow","ic_stop","ic_skip_next","Top","Cover","Info","Controls","Player","setPlaylist","currentTrack","setCurrentTrack","Loading","handleFetchData","a","length","Provider","App","initaiallizing","setInitaiallizing","moodDetection","setMoodDetection","String","expressioncatch","setExpressioncatch","videoRef","useRef","canvasRef","MODEL_URL","process","all","faceapi","tinyFaceDetector","loadFromUri","faceExpressionNet","then","startVideo","loadModels","navigator","getUserMedia","audio","video","stream","current","srcObject","warn","clickHadler","window","temp","clickHadler1","className","backgroundImage","background","ref","autoPlay","muted","height","onPlay","setInterval","innerHTML","displaySize","withFaceExpressions","detections","resizedDetections","drawDetections","drawFaceExpressions","mood_return","item","exp","expressions","happy","neutral","sad","surprised","angry","getMaxValue","max","moods","finalMood","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2d5a5ca7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.7a561ac1.png\";","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nexport function Playlist(props) {\r\n  const Container = styled.div`\r\n    height: 260px;\r\n    box-sizing: border-box;\r\n    overflow: scroll;\r\n  `;\r\n\r\n  const Item = styled.div`\r\n    width: 100%;\r\n    height: 45px;\r\n    cursor: pointer;\r\n    color: #FFFEFE;\r\n    margin-left: 2rem;\r\n    margin-top: 1rem;\r\n    display: flex;\r\n    box-sizing: border-box;\r\n  `;\r\n\r\n  const Image = styled.img`\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n  `;\r\n\r\n  const Descr = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 1rem;\r\n    width: 100%;\r\n    justify-content: center;\r\n  `;\r\n\r\n  const Title = styled.p`\r\n    font-weight: bold;\r\n    font-size: 0.8rem;\r\n  `;\r\n\r\n  const Author = styled.p`\r\n    text-transform: uppercase;\r\n    font-size: 0.6rem;\r\n    font-weight: 300;\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      {props.playlist.map((track) => (\r\n        <Item key={track.id} onClick={() => props.onChangeTrack(track.id)}>\r\n          <Image src={track.cover} alt=\"cover\" />\r\n          <Descr>\r\n            <Title>{track.title}</Title>\r\n            <Author>{track.author}</Author>\r\n          </Descr>\r\n        </Item>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Playlist.PropsTypes = {\r\n//   playlist: PropsTypes.array,\r\n//   onChangeTrack: PropsTypes.func,\r\n// };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nexport function ProgressBar(props) {\r\n  const Container = styled.div`\r\n    position: relative;\r\n    height: 4px;\r\n    width: calc(${props.width || '100%'} - 15px);\r\n    background-color: #c9bbdc;\r\n    border-radius: 5px;\r\n  `;\r\n\r\n  const Point = styled.div`\r\n    position: absolute;\r\n    left: ${props.progressPercent};\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    bottom: 10px;\r\n    height: 8px;\r\n    width: 8px;\r\n    background-color: #7364a9;\r\n    border-radius: 50%;\r\n  `;\r\n  const Progress = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 10px;\r\n    height: inherit;\r\n    width: ${props.progressPercent};\r\n    background-color: #7364a9;\r\n    border-radius: 5px;\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      <Point />\r\n      <Progress />\r\n    </Container>\r\n  );\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  progressPercent: PropTypes.string,\r\n  width: PropTypes.string,\r\n};\r\n","import React from 'react';\r\n\r\nvar fetchedPlaylist = [];\r\n\r\n// var selectedMood = 'h';\r\n\r\nconst PlaylistHappy = [\r\n  {\r\n    id: 0,\r\n    title: 'Baila Nonstop',\r\n    author: 'Srilanken artist',\r\n    url: 'https://facedetectionappdataminning.000webhostapp.com/happybila.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Baila gamuda remix krla B&S',\r\n    author: 'B & S',\r\n    url: '‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍https://facedetectionappdataminning.000webhostapp.com/happybailabns.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n];\r\n\r\nconst PlaylistSad = [\r\n  {\r\n    id: 1,\r\n    title: 'Obe sina laga',\r\n    author: 'miuru sangeeth',\r\n    url: '‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍https://facedetectionappdataminning.000webhostapp.com/sad2obesina.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n  {\r\n    id: 0,\r\n    title: 'Ma dase Wedna',\r\n    author: 'miuru sangeeth',\r\n    url: 'https://facedetectionappdataminning.000webhostapp.com/sad1madase.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Perawadanak',\r\n    author: 'Sanuka wikramsinghe',\r\n    url: '‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍https://facedetectionappdataminning.000webhostapp.com/sad3peraw.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n];\r\n\r\nconst PlaylistNatural = [\r\n  {\r\n    id: 1,\r\n    title: 'Oba apple malak wage',\r\n    author: 'amarasiri peries',\r\n    url: '‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍https://facedetectionappdataminning.000webhostapp.com/natural1obaapple.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n  {\r\n    id: 0,\r\n    title: 'Depiya nagala',\r\n    author: 'Lawan abhishek',\r\n    url: 'https://facedetectionappdataminning.000webhostapp.com/natural1depiyanagala.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Denana thuru ma',\r\n    author: 'sachintha lakshan',\r\n    url: '‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍‍https://facedetectionappdataminning.000webhostapp.com/natural1denanthuru.mp3',\r\n    cover: 'https://gutta.lv/wp-content/uploads/2015/10/test-img.jpg',\r\n  },\r\n];\r\n\r\n// mock api request\r\nexport const fetchPlaylist = (emotion) => {\r\n  switch (emotion) {\r\n    case 'neutral':\r\n      fetchedPlaylist = PlaylistNatural;\r\n      break;\r\n    case 'happy':\r\n      fetchedPlaylist = PlaylistHappy;\r\n      break;\r\n    case 'sad':\r\n      fetchedPlaylist = PlaylistSad;\r\n      break;\r\n    default:\r\n      fetchedPlaylist = PlaylistNatural;\r\n      console.log(\"hiiiii\");\r\n  }\r\n\r\n  // if (emotion===\"s\"){\r\n  //   console.log(\"fuck fuck fuck\");\r\n  // }\r\n  // else{\r\n  //   console.log(\"fuck double\");\r\n  // }\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res(fetchedPlaylist), 1000);\r\n  });\r\n};\r\n\r\nexport const PlaylistContext = React.createContext();\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Icon } from 'react-icons-kit';\r\nimport {\r\n  ic_play_arrow,\r\n  ic_pause,\r\n  ic_stop,\r\n  ic_skip_next,\r\n  ic_skip_previous,\r\n} from 'react-icons-kit/md/';\r\n\r\nimport { ProgressBar } from './ProgressBar';\r\nimport { PlaylistContext } from '../../store/playlist';\r\n\r\nconst getSecondsToMinutesAndSeconds = (time) => {\r\n  if (time === 0) {\r\n    return '0 : 00';\r\n  }\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time - minutes * 60;\r\n  return `${minutes} : 0${seconds}`;\r\n};\r\n\r\nconst iconStyles = {\r\n  cursor: 'pointer',\r\n  color: '#472F90',\r\n};\r\n\r\nexport function Audio(props) {\r\n  let audioPlayer;\r\n\r\n  const [currentTrackDuration, setCurrentTrackDuration] = useState(0);\r\n  const [currentTrackMoment, setCurrentTrackMoment] = useState(0);\r\n  const [progressBarWidth, setProgressBarWidth] = useState('0');\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const Counter = styled.p`\r\n    font-size: 0.65rem;\r\n    margin: 0 1rem;\r\n    color: #472f90;\r\n  `;\r\n\r\n  const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  `;\r\n\r\n  const initPlayer = () => {\r\n    audioPlayer = document.getElementById('audioPlayer');\r\n  };\r\n\r\n  const handleStop = () => {\r\n    audioPlayer.pause();\r\n    audioPlayer.currentTime = 0.0;\r\n    setIsPlaying(false);\r\n    setCurrentTrackMoment(0);\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    if (audioPlayer.paused || audioPlayer.ended) {\r\n      audioPlayer.play();\r\n      setIsPlaying(true);\r\n    } else {\r\n      audioPlayer.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const handleMetadata = () => {\r\n    const duration = Math.floor(audioPlayer.duration);\r\n    setCurrentTrackDuration(getSecondsToMinutesAndSeconds(duration));\r\n  };\r\n\r\n  const handleTimeupdate = (playNext) => {\r\n    setCurrentTrackMoment(Math.floor(audioPlayer.currentTime));\r\n    setProgressBarWidth(\r\n      Math.floor((audioPlayer.currentTime / audioPlayer.duration) * 100) + '%'\r\n    );\r\n    if (audioPlayer.currentTime === audioPlayer.duration) {\r\n      playNext();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentTrackDuration(0);\r\n    setCurrentTrackMoment(0);\r\n    setProgressBarWidth('0');\r\n    handlePlay();\r\n  }, [props.url]);\r\n\r\n  useLayoutEffect(() => {\r\n    initPlayer();\r\n  });\r\n\r\n  return (\r\n    <PlaylistContext.Consumer>\r\n      {(value) => (\r\n        <div key={props.url}>\r\n          <audio\r\n            id=\"audioPlayer\"\r\n            preload=\"metadata\"\r\n            onLoadedMetadata={handleMetadata}\r\n            onTimeUpdate={() => handleTimeupdate(value.handleNextTrack)}\r\n          >\r\n            <source src={props.url} type=\"audio/ogg\" />\r\n            Ooops, your browser is sooo old.\r\n          </audio>\r\n          <Container>\r\n            <Icon\r\n              style={iconStyles}\r\n              icon={ic_skip_previous}\r\n              onClick={value.handlePrevTrack}\r\n              size={30}\r\n            />\r\n            <Icon\r\n              style={iconStyles}\r\n              icon={isPlaying ? ic_pause : ic_play_arrow}\r\n              onClick={handlePlay}\r\n              size={30}\r\n            />\r\n            <Icon\r\n              size={30}\r\n              style={iconStyles}\r\n              icon={ic_stop}\r\n              onClick={handleStop}\r\n            />\r\n            <Icon\r\n              style={iconStyles}\r\n              icon={ic_skip_next}\r\n              onClick={value.handleNextTrack}\r\n              size={30}\r\n            />\r\n            <Counter>\r\n              {getSecondsToMinutesAndSeconds(currentTrackMoment)}\r\n            </Counter>\r\n            <ProgressBar progressPercent={progressBarWidth} width={'200px'} />\r\n            <Counter>{currentTrackDuration || '0 : 00'}</Counter>\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </PlaylistContext.Consumer>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropsTypes from 'prop-types';\r\nimport { Audio } from './Audio';\r\n\r\nexport function Top(props) {\r\n  const Container = styled.div`\r\n    border-radius: 5px 5px 0 0;\r\n    height: 240px;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    color: #27117c;\r\n    box-sizing: border-box;\r\n    background-image: linear-gradient(\r\n      to bottom,\r\n      #ebe6f8,\r\n      #ece5f6,\r\n      #ede4f5,\r\n      #eee4f3,\r\n      #efe3f1\r\n    );\r\n  `;\r\n\r\n  const Cover = styled.img`\r\n    width: 135px;\r\n    height: 135px;\r\n    border-radius: 5px;\r\n    margin-right: 1rem;\r\n  `;\r\n\r\n  const Info = styled.div`\r\n    margin-top: 1rem;\r\n  `;\r\n\r\n  const Title = styled.p`\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n  `;\r\n\r\n  const Author = styled.p`\r\n    font-size: 0.8rem;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-top: 0.5rem;\r\n  `;\r\n\r\n  const Controls = styled.div`\r\n    flex-basis: 100%;\r\n    margin-top: 1.5rem;\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      <Cover src={props.track.cover} alt=\"cover\" />\r\n      <Info>\r\n        <Title>{props.track.title}</Title>\r\n        <Author>{props.track.author}</Author>\r\n      </Info>\r\n      <Controls>\r\n        <Audio url={props.track.url} />\r\n      </Controls>\r\n    </Container>\r\n  );\r\n}\r\n\r\nTop.propTypes = {\r\n  track: PropsTypes.object,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Playlist } from './Playlist';\r\nimport { Top } from './Top';\r\nimport { fetchPlaylist, PlaylistContext } from '../../store/playlist';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function Player(props) {\r\n  const [playlist, setPlaylist] = useState([]);\r\n  const [currentTrack, setCurrentTrack] = useState(0);\r\n\r\n  const Container = styled.div`\r\n    position: relative;\r\n    width: 500px;\r\n    height: 500px;\r\n    margin: 0 auto;\r\n    border-radius: 5px;\r\n    box-shadow: 0px 0px 15px -5px rgba(0, 0, 0, 0.75);\r\n  `;\r\n\r\n  const Loading = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  `;\r\n\r\n  const handleChangeTrack = (id) => {\r\n    setCurrentTrack(id);\r\n  };\r\n\r\n  const handleNextTrack = () => {\r\n    if (currentTrack === playlist.length - 1) {\r\n      setCurrentTrack(0);\r\n      return;\r\n    }\r\n    setCurrentTrack(currentTrack + 1);\r\n  };\r\n\r\n  const handlePrevTrack = () => {\r\n    if (currentTrack === 0) {\r\n      setCurrentTrack(playlist.length - 1);\r\n      return;\r\n    }\r\n    setCurrentTrack(currentTrack - 1);\r\n  };\r\n\r\n  const handleFetchData = async () => {\r\n    console.log('>>> in player:', props.emotion);\r\n    const playlist = await fetchPlaylist(props.emotion);\r\n    setPlaylist(playlist);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchData();\r\n  }, []);\r\n\r\n  if (playlist.length === 0) {\r\n    return (\r\n      <Container>\r\n        <Loading>loading...</Loading>\r\n      </Container>\r\n    );\r\n  }\r\n  Player.propTypes = {\r\n    emotion: PropTypes.string,\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PlaylistContext.Provider value={{ handleNextTrack, handlePrevTrack }}>\r\n        <Top track={playlist[currentTrack]} />\r\n        <Playlist onChangeTrack={handleChangeTrack} playlist={playlist} />\r\n      </PlaylistContext.Provider>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport * as faceapi from 'face-api.js';\r\nimport background from './cover/back.png';\r\n\r\nimport { Player } from './components/player/Player';\r\n\r\nfunction App() {\r\n  const videoWidth = 480;\r\n  const videoHeight = 640;\r\n  const [initaiallizing, setInitaiallizing] = useState(false);\r\n  const [moodDetection, setMoodDetection] = useState(false);\r\n  const [expressioncatch, setExpressioncatch] = useState(String);\r\n  var moodDetectionSet = false;\r\n  const videoRef = useRef();\r\n  const canvasRef = useRef();\r\n\r\n  var temp = null;\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n      setInitaiallizing(true);\r\n      Promise.all([\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n        //faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        //faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\r\n      ]).then(startVideo);\r\n    };\r\n    loadModels();\r\n  }, []);\r\n  const startVideo = () => {\r\n    navigator.getUserMedia(\r\n      { audio: false, video: true },\r\n\r\n      (stream) => (videoRef.current.srcObject = stream),\r\n      function () {\r\n        console.warn('Error getting video stream from getUserMedia');\r\n      }\r\n    );\r\n  };\r\n\r\n  const haddleVideoOnPlay = () => {\r\n    setInterval(async () => {\r\n      if (initaiallizing) {\r\n        setInitaiallizing(false);\r\n      }\r\n      canvasRef.current.innerHTML = faceapi.createCanvasFromMedia(\r\n        videoRef.current\r\n      );\r\n      const displaySize = {\r\n        width: videoWidth,\r\n        height: videoHeight,\r\n      };\r\n      faceapi.matchDimensions(canvasRef.current, displaySize);\r\n      const detections = await faceapi\r\n        .detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n        //.withFaceLandmarks()\r\n        .withFaceExpressions();\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n      // canvasRef.current\r\n      //   .getContext('2d')\r\n      //   .clearReact(0, 0, videoWidth, videoHeight);\r\n      faceapi.draw.drawDetections(canvasRef.current, resizedDetections);\r\n      //faceapi.draw.drawFaceLandmarks(canvasRef.current, resizedDetections);\r\n      faceapi.draw.drawFaceExpressions(canvasRef.current, resizedDetections);\r\n\r\n      // console.log(faceapi.draw.drawFaceExpressions());\r\n      // console.log(detections);\r\n\r\n      const mood_return = detections.map((item) => {\r\n        var exp = [\r\n          item.expressions.happy,\r\n          item.expressions.neutral,\r\n          item.expressions.sad,\r\n          item.expressions.surprised,\r\n          item.expressions.angry,\r\n        ];\r\n        var getMaxValue = Math.max(...exp);\r\n        var moods = ['happy', 'neutral', 'sad', 'surprised', 'angry'];\r\n        var finalMood = '';\r\n\r\n        for (var i = 0; i <= exp.length; i++) {\r\n          if (getMaxValue === exp[i]) {\r\n            finalMood = moods[i];\r\n          }\r\n        }\r\n        return finalMood;\r\n      });\r\n\r\n      var selectedmood;\r\n      if (mood_return[0] !== 'undefined') {\r\n        window.temp = mood_return[0];\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  const clickHadler = () => {\r\n    setExpressioncatch(window.temp);\r\n\r\n    setMoodDetection(true);\r\n    moodDetectionSet = true;\r\n  };\r\n  const clickHadler1 = () => {\r\n    setMoodDetection(false);\r\n    moodDetectionSet = false;\r\n  };\r\n\r\n  const WindowHadler = () => {\r\n    return !moodDetection ? (\r\n      <>\r\n        <button\r\n          style={{\r\n            background: '#FC0400',\r\n            width: 200,\r\n            height: 60,\r\n            color: 'white',\r\n          }}\r\n          onClick={clickHadler}\r\n        >\r\n          Click here!\r\n        </button>\r\n        <h1 color=\"white\" className=\"headerName\">\r\n          Catch my mood !!\r\n        </h1>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <card className=\"card\">\r\n          <button\r\n            style={{\r\n              background: '#FC0400',\r\n              width: 200,\r\n              height: 60,\r\n              color: 'white',\r\n            }}\r\n            onClick={clickHadler1}\r\n          >\r\n            Click here!\r\n          </button>\r\n          <h1 color=\"white\" className=\"headerName\">\r\n            Catch Again my mood !!\r\n          </h1>\r\n          <Player emotion={expressioncatch} />\r\n        </card>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"App\" style={{ backgroundImage: `url(${background})` }}>\r\n      <span>{initaiallizing ? 'initaiallizing' : 'ready'}</span>\r\n      <div className=\"display-flex justify-content-center\">\r\n        <video\r\n          ref={videoRef}\r\n          autoPlay\r\n          muted\r\n          height={videoHeight}\r\n          width={videoWidth}\r\n          onPlay={haddleVideoOnPlay}\r\n        />\r\n        <canvas ref={canvasRef} className=\"position-absolute\" />\r\n      </div>\r\n      <div>{WindowHadler()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}